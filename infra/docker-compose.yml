
services:
  db:
    image: pgvector/pgvector:pg15
    environment:
      POSTGRES_DB: supportdesk
      POSTGRES_USER: supportdesk
      POSTGRES_PASSWORD: supportdesk_dev
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U supportdesk -d supportdesk"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  api:
    build:
      context: ..
      dockerfile: infra/Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql+asyncpg://supportdesk:supportdesk_dev@db:5432/supportdesk
      - REDIS_URL=redis://redis:6379
      - LOG_LEVEL=INFO
      - SYNC_DATABASE_URL=postgresql://supportdesk:supportdesk_dev@db:5432/supportdesk
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ../supportdesk:/app/supportdesk
      - ../alembic.ini:/app/alembic.ini:ro
    command: uvicorn supportdesk.app.main:app --host 0.0.0.0 --port 8000 --reload
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3

  worker:
    build:
      context: ..
      dockerfile: infra/Dockerfile
    environment:
      - DATABASE_URL=postgresql+asyncpg://supportdesk:supportdesk_dev@db:5432/supportdesk
      - REDIS_URL=redis://redis:6379
      - LOG_LEVEL=INFO
      - SYNC_DATABASE_URL=postgresql://supportdesk:supportdesk_dev@db:5432/supportdesk
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ../supportdesk:/app/supportdesk
      - ../alembic.ini:/app/alembic.ini:ro
    command: python -m supportdesk.app.core.worker
    healthcheck:
      test: ["CMD", "python", "-c", "import redis; r = redis.from_url('redis://redis:6379'); r.ping()"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  redis_data:
